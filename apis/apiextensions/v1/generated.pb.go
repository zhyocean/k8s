// Code generated by protoc-gen-go. DO NOT EDIT.
// source: generated.proto

/*
Package v1 is a generated protocol buffer package.

It is generated from these files:
	generated.proto

It has these top-level messages:
	ConversionRequest
	ConversionResponse
	ConversionReview
	CustomResourceColumnDefinition
	CustomResourceConversion
	CustomResourceDefinition
	CustomResourceDefinitionCondition
	CustomResourceDefinitionList
	CustomResourceDefinitionNames
	CustomResourceDefinitionSpec
	CustomResourceDefinitionStatus
	CustomResourceDefinitionVersion
	CustomResourceSubresourceScale
	CustomResourceSubresourceStatus
	CustomResourceSubresources
	CustomResourceValidation
	ExternalDocumentation
	JSON
	JSONSchemaProps
	JSONSchemaPropsOrArray
	JSONSchemaPropsOrBool
	JSONSchemaPropsOrStringArray
	ServiceReference
	WebhookClientConfig
	WebhookConversion
*/
package v1

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import k8s_io_apimachinery_pkg_apis_meta_v1 "github.com/zhyocean/k8s/apis/meta/v1"
import k8s_io_apimachinery_pkg_runtime "github.com/zhyocean/k8s/runtime"
import _ "github.com/zhyocean/k8s/runtime/schema"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// ConversionRequest describes the conversion request parameters.
type ConversionRequest struct {
	// uid is an identifier for the individual request/response. It allows distinguishing instances of requests which are
	// otherwise identical (parallel requests, etc).
	// The UID is meant to track the round trip (request/response) between the Kubernetes API server and the webhook, not the user request.
	// It is suitable for correlating log entries between the webhook and apiserver, for either auditing or debugging.
	Uid *string `protobuf:"bytes,1,opt,name=uid" json:"uid,omitempty"`
	// desiredAPIVersion is the version to convert given objects to. e.g. "myapi.example.com/v1"
	DesiredAPIVersion *string `protobuf:"bytes,2,opt,name=desiredAPIVersion" json:"desiredAPIVersion,omitempty"`
	// objects is the list of custom resource objects to be converted.
	Objects          []*k8s_io_apimachinery_pkg_runtime.RawExtension `protobuf:"bytes,3,rep,name=objects" json:"objects,omitempty"`
	XXX_unrecognized []byte                                          `json:"-"`
}

func (m *ConversionRequest) Reset()                    { *m = ConversionRequest{} }
func (m *ConversionRequest) String() string            { return proto.CompactTextString(m) }
func (*ConversionRequest) ProtoMessage()               {}
func (*ConversionRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *ConversionRequest) GetUid() string {
	if m != nil && m.Uid != nil {
		return *m.Uid
	}
	return ""
}

func (m *ConversionRequest) GetDesiredAPIVersion() string {
	if m != nil && m.DesiredAPIVersion != nil {
		return *m.DesiredAPIVersion
	}
	return ""
}

func (m *ConversionRequest) GetObjects() []*k8s_io_apimachinery_pkg_runtime.RawExtension {
	if m != nil {
		return m.Objects
	}
	return nil
}

// ConversionResponse describes a conversion response.
type ConversionResponse struct {
	// uid is an identifier for the individual request/response.
	// This should be copied over from the corresponding `request.uid`.
	Uid *string `protobuf:"bytes,1,opt,name=uid" json:"uid,omitempty"`
	// convertedObjects is the list of converted version of `request.objects` if the `result` is successful, otherwise empty.
	// The webhook is expected to set `apiVersion` of these objects to the `request.desiredAPIVersion`. The list
	// must also have the same size as the input list with the same objects in the same order (equal kind, metadata.uid, metadata.name and metadata.namespace).
	// The webhook is allowed to mutate labels and annotations. Any other change to the metadata is silently ignored.
	ConvertedObjects []*k8s_io_apimachinery_pkg_runtime.RawExtension `protobuf:"bytes,2,rep,name=convertedObjects" json:"convertedObjects,omitempty"`
	// result contains the result of conversion with extra details if the conversion failed. `result.status` determines if
	// the conversion failed or succeeded. The `result.status` field is required and represents the success or failure of the
	// conversion. A successful conversion must set `result.status` to `Success`. A failed conversion must set
	// `result.status` to `Failure` and provide more details in `result.message` and return http status 200. The `result.message`
	// will be used to construct an error message for the end user.
	Result           *k8s_io_apimachinery_pkg_apis_meta_v1.Status `protobuf:"bytes,3,opt,name=result" json:"result,omitempty"`
	XXX_unrecognized []byte                                       `json:"-"`
}

func (m *ConversionResponse) Reset()                    { *m = ConversionResponse{} }
func (m *ConversionResponse) String() string            { return proto.CompactTextString(m) }
func (*ConversionResponse) ProtoMessage()               {}
func (*ConversionResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ConversionResponse) GetUid() string {
	if m != nil && m.Uid != nil {
		return *m.Uid
	}
	return ""
}

func (m *ConversionResponse) GetConvertedObjects() []*k8s_io_apimachinery_pkg_runtime.RawExtension {
	if m != nil {
		return m.ConvertedObjects
	}
	return nil
}

func (m *ConversionResponse) GetResult() *k8s_io_apimachinery_pkg_apis_meta_v1.Status {
	if m != nil {
		return m.Result
	}
	return nil
}

// ConversionReview describes a conversion request/response.
type ConversionReview struct {
	// request describes the attributes for the conversion request.
	// +optional
	Request *ConversionRequest `protobuf:"bytes,1,opt,name=request" json:"request,omitempty"`
	// response describes the attributes for the conversion response.
	// +optional
	Response         *ConversionResponse `protobuf:"bytes,2,opt,name=response" json:"response,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *ConversionReview) Reset()                    { *m = ConversionReview{} }
func (m *ConversionReview) String() string            { return proto.CompactTextString(m) }
func (*ConversionReview) ProtoMessage()               {}
func (*ConversionReview) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ConversionReview) GetRequest() *ConversionRequest {
	if m != nil {
		return m.Request
	}
	return nil
}

func (m *ConversionReview) GetResponse() *ConversionResponse {
	if m != nil {
		return m.Response
	}
	return nil
}

// CustomResourceColumnDefinition specifies a column for server side printing.
type CustomResourceColumnDefinition struct {
	// name is a human readable name for the column.
	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// type is an OpenAPI type definition for this column.
	// See https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types for details.
	Type *string `protobuf:"bytes,2,opt,name=type" json:"type,omitempty"`
	// format is an optional OpenAPI type definition for this column. The 'name' format is applied
	// to the primary identifier column to assist in clients identifying column is the resource name.
	// See https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types for details.
	// +optional
	Format *string `protobuf:"bytes,3,opt,name=format" json:"format,omitempty"`
	// description is a human readable description of this column.
	// +optional
	Description *string `protobuf:"bytes,4,opt,name=description" json:"description,omitempty"`
	// priority is an integer defining the relative importance of this column compared to others. Lower
	// numbers are considered higher priority. Columns that may be omitted in limited space scenarios
	// should be given a priority greater than 0.
	// +optional
	Priority *int32 `protobuf:"varint,5,opt,name=priority" json:"priority,omitempty"`
	// jsonPath is a simple JSON path (i.e. with array notation) which is evaluated against
	// each custom resource to produce the value for this column.
	JsonPath         *string `protobuf:"bytes,6,opt,name=jsonPath" json:"jsonPath,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CustomResourceColumnDefinition) Reset()                    { *m = CustomResourceColumnDefinition{} }
func (m *CustomResourceColumnDefinition) String() string            { return proto.CompactTextString(m) }
func (*CustomResourceColumnDefinition) ProtoMessage()               {}
func (*CustomResourceColumnDefinition) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *CustomResourceColumnDefinition) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *CustomResourceColumnDefinition) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

func (m *CustomResourceColumnDefinition) GetFormat() string {
	if m != nil && m.Format != nil {
		return *m.Format
	}
	return ""
}

func (m *CustomResourceColumnDefinition) GetDescription() string {
	if m != nil && m.Description != nil {
		return *m.Description
	}
	return ""
}

func (m *CustomResourceColumnDefinition) GetPriority() int32 {
	if m != nil && m.Priority != nil {
		return *m.Priority
	}
	return 0
}

func (m *CustomResourceColumnDefinition) GetJsonPath() string {
	if m != nil && m.JsonPath != nil {
		return *m.JsonPath
	}
	return ""
}

// CustomResourceConversion describes how to convert different versions of a CR.
type CustomResourceConversion struct {
	// strategy specifies how custom resources are converted between versions. Allowed values are:
	// - `None`: The converter only change the apiVersion and would not touch any other field in the custom resource.
	// - `Webhook`: API Server will call to an external webhook to do the conversion. Additional information
	//   is needed for this option. This requires spec.preserveUnknownFields to be false, and spec.conversion.webhook to be set.
	Strategy *string `protobuf:"bytes,1,opt,name=strategy" json:"strategy,omitempty"`
	// webhook describes how to call the conversion webhook. Required when `strategy` is set to `Webhook`.
	// +optional
	Webhook          *WebhookConversion `protobuf:"bytes,2,opt,name=webhook" json:"webhook,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *CustomResourceConversion) Reset()                    { *m = CustomResourceConversion{} }
func (m *CustomResourceConversion) String() string            { return proto.CompactTextString(m) }
func (*CustomResourceConversion) ProtoMessage()               {}
func (*CustomResourceConversion) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *CustomResourceConversion) GetStrategy() string {
	if m != nil && m.Strategy != nil {
		return *m.Strategy
	}
	return ""
}

func (m *CustomResourceConversion) GetWebhook() *WebhookConversion {
	if m != nil {
		return m.Webhook
	}
	return nil
}

// CustomResourceDefinition represents a resource that should be exposed on the API server.  Its name MUST be in the format
// <.spec.name>.<.spec.group>.
type CustomResourceDefinition struct {
	Metadata *k8s_io_apimachinery_pkg_apis_meta_v1.ObjectMeta `protobuf:"bytes,1,opt,name=metadata" json:"metadata,omitempty"`
	// spec describes how the user wants the resources to appear
	Spec *CustomResourceDefinitionSpec `protobuf:"bytes,2,opt,name=spec" json:"spec,omitempty"`
	// status indicates the actual state of the CustomResourceDefinition
	// +optional
	Status           *CustomResourceDefinitionStatus `protobuf:"bytes,3,opt,name=status" json:"status,omitempty"`
	XXX_unrecognized []byte                          `json:"-"`
}

func (m *CustomResourceDefinition) Reset()                    { *m = CustomResourceDefinition{} }
func (m *CustomResourceDefinition) String() string            { return proto.CompactTextString(m) }
func (*CustomResourceDefinition) ProtoMessage()               {}
func (*CustomResourceDefinition) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *CustomResourceDefinition) GetMetadata() *k8s_io_apimachinery_pkg_apis_meta_v1.ObjectMeta {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *CustomResourceDefinition) GetSpec() *CustomResourceDefinitionSpec {
	if m != nil {
		return m.Spec
	}
	return nil
}

func (m *CustomResourceDefinition) GetStatus() *CustomResourceDefinitionStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

// CustomResourceDefinitionCondition contains details for the current condition of this pod.
type CustomResourceDefinitionCondition struct {
	// type is the type of the condition. Types include Established, NamesAccepted and Terminating.
	Type *string `protobuf:"bytes,1,opt,name=type" json:"type,omitempty"`
	// status is the status of the condition.
	// Can be True, False, Unknown.
	Status *string `protobuf:"bytes,2,opt,name=status" json:"status,omitempty"`
	// lastTransitionTime last time the condition transitioned from one status to another.
	// +optional
	LastTransitionTime *k8s_io_apimachinery_pkg_apis_meta_v1.Time `protobuf:"bytes,3,opt,name=lastTransitionTime" json:"lastTransitionTime,omitempty"`
	// reason is a unique, one-word, CamelCase reason for the condition's last transition.
	// +optional
	Reason *string `protobuf:"bytes,4,opt,name=reason" json:"reason,omitempty"`
	// message is a human-readable message indicating details about last transition.
	// +optional
	Message          *string `protobuf:"bytes,5,opt,name=message" json:"message,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CustomResourceDefinitionCondition) Reset()         { *m = CustomResourceDefinitionCondition{} }
func (m *CustomResourceDefinitionCondition) String() string { return proto.CompactTextString(m) }
func (*CustomResourceDefinitionCondition) ProtoMessage()    {}
func (*CustomResourceDefinitionCondition) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{6}
}

func (m *CustomResourceDefinitionCondition) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

func (m *CustomResourceDefinitionCondition) GetStatus() string {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return ""
}

func (m *CustomResourceDefinitionCondition) GetLastTransitionTime() *k8s_io_apimachinery_pkg_apis_meta_v1.Time {
	if m != nil {
		return m.LastTransitionTime
	}
	return nil
}

func (m *CustomResourceDefinitionCondition) GetReason() string {
	if m != nil && m.Reason != nil {
		return *m.Reason
	}
	return ""
}

func (m *CustomResourceDefinitionCondition) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

// CustomResourceDefinitionList is a list of CustomResourceDefinition objects.
type CustomResourceDefinitionList struct {
	Metadata *k8s_io_apimachinery_pkg_apis_meta_v1.ListMeta `protobuf:"bytes,1,opt,name=metadata" json:"metadata,omitempty"`
	// items list individual CustomResourceDefinition objects
	Items            []*CustomResourceDefinition `protobuf:"bytes,2,rep,name=items" json:"items,omitempty"`
	XXX_unrecognized []byte                      `json:"-"`
}

func (m *CustomResourceDefinitionList) Reset()                    { *m = CustomResourceDefinitionList{} }
func (m *CustomResourceDefinitionList) String() string            { return proto.CompactTextString(m) }
func (*CustomResourceDefinitionList) ProtoMessage()               {}
func (*CustomResourceDefinitionList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *CustomResourceDefinitionList) GetMetadata() *k8s_io_apimachinery_pkg_apis_meta_v1.ListMeta {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *CustomResourceDefinitionList) GetItems() []*CustomResourceDefinition {
	if m != nil {
		return m.Items
	}
	return nil
}

// CustomResourceDefinitionNames indicates the names to serve this CustomResourceDefinition
type CustomResourceDefinitionNames struct {
	// plural is the plural name of the resource to serve.
	// The custom resources are served under `/apis/<group>/<version>/.../<plural>`.
	// Must match the name of the CustomResourceDefinition (in the form `<names.plural>.<group>`).
	// Must be all lowercase.
	Plural *string `protobuf:"bytes,1,opt,name=plural" json:"plural,omitempty"`
	// singular is the singular name of the resource. It must be all lowercase. Defaults to lowercased `kind`.
	// +optional
	Singular *string `protobuf:"bytes,2,opt,name=singular" json:"singular,omitempty"`
	// shortNames are short names for the resource, exposed in API discovery documents,
	// and used by clients to support invocations like `kubectl get <shortname>`.
	// It must be all lowercase.
	// +optional
	ShortNames []string `protobuf:"bytes,3,rep,name=shortNames" json:"shortNames,omitempty"`
	// kind is the serialized kind of the resource. It is normally CamelCase and singular.
	// Custom resource instances will use this value as the `kind` attribute in API calls.
	Kind *string `protobuf:"bytes,4,opt,name=kind" json:"kind,omitempty"`
	// listKind is the serialized kind of the list for this resource. Defaults to "`kind`List".
	// +optional
	ListKind *string `protobuf:"bytes,5,opt,name=listKind" json:"listKind,omitempty"`
	// categories is a list of grouped resources this custom resource belongs to (e.g. 'all').
	// This is published in API discovery documents, and used by clients to support invocations like
	// `kubectl get all`.
	// +optional
	Categories       []string `protobuf:"bytes,6,rep,name=categories" json:"categories,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CustomResourceDefinitionNames) Reset()                    { *m = CustomResourceDefinitionNames{} }
func (m *CustomResourceDefinitionNames) String() string            { return proto.CompactTextString(m) }
func (*CustomResourceDefinitionNames) ProtoMessage()               {}
func (*CustomResourceDefinitionNames) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *CustomResourceDefinitionNames) GetPlural() string {
	if m != nil && m.Plural != nil {
		return *m.Plural
	}
	return ""
}

func (m *CustomResourceDefinitionNames) GetSingular() string {
	if m != nil && m.Singular != nil {
		return *m.Singular
	}
	return ""
}

func (m *CustomResourceDefinitionNames) GetShortNames() []string {
	if m != nil {
		return m.ShortNames
	}
	return nil
}

func (m *CustomResourceDefinitionNames) GetKind() string {
	if m != nil && m.Kind != nil {
		return *m.Kind
	}
	return ""
}

func (m *CustomResourceDefinitionNames) GetListKind() string {
	if m != nil && m.ListKind != nil {
		return *m.ListKind
	}
	return ""
}

func (m *CustomResourceDefinitionNames) GetCategories() []string {
	if m != nil {
		return m.Categories
	}
	return nil
}

// CustomResourceDefinitionSpec describes how a user wants their resource to appear
type CustomResourceDefinitionSpec struct {
	// group is the API group of the defined custom resource.
	// The custom resources are served under `/apis/<group>/...`.
	// Must match the name of the CustomResourceDefinition (in the form `<names.plural>.<group>`).
	Group *string `protobuf:"bytes,1,opt,name=group" json:"group,omitempty"`
	// names specify the resource and kind names for the custom resource.
	Names *CustomResourceDefinitionNames `protobuf:"bytes,3,opt,name=names" json:"names,omitempty"`
	// scope indicates whether the defined custom resource is cluster- or namespace-scoped.
	// Allowed values are `Cluster` and `Namespaced`.
	Scope *string `protobuf:"bytes,4,opt,name=scope" json:"scope,omitempty"`
	// versions is the list of all API versions of the defined custom resource.
	// Version names are used to compute the order in which served versions are listed in API discovery.
	// If the version string is "kube-like", it will sort above non "kube-like" version strings, which are ordered
	// lexicographically. "Kube-like" versions start with a "v", then are followed by a number (the major version),
	// then optionally the string "alpha" or "beta" and another number (the minor version). These are sorted first
	// by GA > beta > alpha (where GA is a version with no suffix such as beta or alpha), and then by comparing
	// major version, then minor version. An example sorted list of versions:
	// v10, v2, v1, v11beta2, v10beta3, v3beta1, v12alpha1, v11alpha2, foo1, foo10.
	Versions []*CustomResourceDefinitionVersion `protobuf:"bytes,7,rep,name=versions" json:"versions,omitempty"`
	// conversion defines conversion settings for the CRD.
	// +optional
	Conversion *CustomResourceConversion `protobuf:"bytes,9,opt,name=conversion" json:"conversion,omitempty"`
	// preserveUnknownFields indicates that object fields which are not specified
	// in the OpenAPI schema should be preserved when persisting to storage.
	// apiVersion, kind, metadata and known fields inside metadata are always preserved.
	// This field is deprecated in favor of setting `x-preserve-unknown-fields` to true in `spec.versions[*].schema.openAPIV3Schema`.
	// See https://kubernetes.io/docs/tasks/access-kubernetes-api/custom-resources/custom-resource-definitions/#pruning-versus-preserving-unknown-fields for details.
	// +optional
	PreserveUnknownFields *bool  `protobuf:"varint,10,opt,name=preserveUnknownFields" json:"preserveUnknownFields,omitempty"`
	XXX_unrecognized      []byte `json:"-"`
}

func (m *CustomResourceDefinitionSpec) Reset()                    { *m = CustomResourceDefinitionSpec{} }
func (m *CustomResourceDefinitionSpec) String() string            { return proto.CompactTextString(m) }
func (*CustomResourceDefinitionSpec) ProtoMessage()               {}
func (*CustomResourceDefinitionSpec) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *CustomResourceDefinitionSpec) GetGroup() string {
	if m != nil && m.Group != nil {
		return *m.Group
	}
	return ""
}

func (m *CustomResourceDefinitionSpec) GetNames() *CustomResourceDefinitionNames {
	if m != nil {
		return m.Names
	}
	return nil
}

func (m *CustomResourceDefinitionSpec) GetScope() string {
	if m != nil && m.Scope != nil {
		return *m.Scope
	}
	return ""
}

func (m *CustomResourceDefinitionSpec) GetVersions() []*CustomResourceDefinitionVersion {
	if m != nil {
		return m.Versions
	}
	return nil
}

func (m *CustomResourceDefinitionSpec) GetConversion() *CustomResourceConversion {
	if m != nil {
		return m.Conversion
	}
	return nil
}

func (m *CustomResourceDefinitionSpec) GetPreserveUnknownFields() bool {
	if m != nil && m.PreserveUnknownFields != nil {
		return *m.PreserveUnknownFields
	}
	return false
}

// CustomResourceDefinitionStatus indicates the state of the CustomResourceDefinition
type CustomResourceDefinitionStatus struct {
	// conditions indicate state for particular aspects of a CustomResourceDefinition
	// +optional
	Conditions []*CustomResourceDefinitionCondition `protobuf:"bytes,1,rep,name=conditions" json:"conditions,omitempty"`
	// acceptedNames are the names that are actually being used to serve discovery.
	// They may be different than the names in spec.
	// +optional
	AcceptedNames *CustomResourceDefinitionNames `protobuf:"bytes,2,opt,name=acceptedNames" json:"acceptedNames,omitempty"`
	// storedVersions lists all versions of CustomResources that were ever persisted. Tracking these
	// versions allows a migration path for stored versions in etcd. The field is mutable
	// so a migration controller can finish a migration to another version (ensuring
	// no old objects are left in storage), and then remove the rest of the
	// versions from this list.
	// Versions may not be removed from `spec.versions` while they exist in this list.
	// +optional
	StoredVersions   []string `protobuf:"bytes,3,rep,name=storedVersions" json:"storedVersions,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CustomResourceDefinitionStatus) Reset()         { *m = CustomResourceDefinitionStatus{} }
func (m *CustomResourceDefinitionStatus) String() string { return proto.CompactTextString(m) }
func (*CustomResourceDefinitionStatus) ProtoMessage()    {}
func (*CustomResourceDefinitionStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{10}
}

func (m *CustomResourceDefinitionStatus) GetConditions() []*CustomResourceDefinitionCondition {
	if m != nil {
		return m.Conditions
	}
	return nil
}

func (m *CustomResourceDefinitionStatus) GetAcceptedNames() *CustomResourceDefinitionNames {
	if m != nil {
		return m.AcceptedNames
	}
	return nil
}

func (m *CustomResourceDefinitionStatus) GetStoredVersions() []string {
	if m != nil {
		return m.StoredVersions
	}
	return nil
}

// CustomResourceDefinitionVersion describes a version for CRD.
type CustomResourceDefinitionVersion struct {
	// name is the version name, e.g. “v1”, “v2beta1”, etc.
	// The custom resources are served under this version at `/apis/<group>/<version>/...` if `served` is true.
	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// served is a flag enabling/disabling this version from being served via REST APIs
	Served *bool `protobuf:"varint,2,opt,name=served" json:"served,omitempty"`
	// storage indicates this version should be used when persisting custom resources to storage.
	// There must be exactly one version with storage=true.
	Storage *bool `protobuf:"varint,3,opt,name=storage" json:"storage,omitempty"`
	// deprecated indicates this version of the custom resource API is deprecated.
	// When set to true, API requests to this version receive a warning header in the server response.
	// Defaults to false.
	// +optional
	Deprecated *bool `protobuf:"varint,7,opt,name=deprecated" json:"deprecated,omitempty"`
	// deprecationWarning overrides the default warning returned to API clients.
	// May only be set when `deprecated` is true.
	// The default warning indicates this version is deprecated and recommends use
	// of the newest served version of equal or greater stability, if one exists.
	// +optional
	DeprecationWarning *string `protobuf:"bytes,8,opt,name=deprecationWarning" json:"deprecationWarning,omitempty"`
	// schema describes the schema used for validation, pruning, and defaulting of this version of the custom resource.
	// +optional
	Schema *CustomResourceValidation `protobuf:"bytes,4,opt,name=schema" json:"schema,omitempty"`
	// subresources specify what subresources this version of the defined custom resource have.
	// +optional
	Subresources *CustomResourceSubresources `protobuf:"bytes,5,opt,name=subresources" json:"subresources,omitempty"`
	// additionalPrinterColumns specifies additional columns returned in Table output.
	// See https://kubernetes.io/docs/reference/using-api/api-concepts/#receiving-resources-as-tables for details.
	// If no columns are specified, a single column displaying the age of the custom resource is used.
	// +optional
	AdditionalPrinterColumns []*CustomResourceColumnDefinition `protobuf:"bytes,6,rep,name=additionalPrinterColumns" json:"additionalPrinterColumns,omitempty"`
	XXX_unrecognized         []byte                            `json:"-"`
}

func (m *CustomResourceDefinitionVersion) Reset()         { *m = CustomResourceDefinitionVersion{} }
func (m *CustomResourceDefinitionVersion) String() string { return proto.CompactTextString(m) }
func (*CustomResourceDefinitionVersion) ProtoMessage()    {}
func (*CustomResourceDefinitionVersion) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{11}
}

func (m *CustomResourceDefinitionVersion) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *CustomResourceDefinitionVersion) GetServed() bool {
	if m != nil && m.Served != nil {
		return *m.Served
	}
	return false
}

func (m *CustomResourceDefinitionVersion) GetStorage() bool {
	if m != nil && m.Storage != nil {
		return *m.Storage
	}
	return false
}

func (m *CustomResourceDefinitionVersion) GetDeprecated() bool {
	if m != nil && m.Deprecated != nil {
		return *m.Deprecated
	}
	return false
}

func (m *CustomResourceDefinitionVersion) GetDeprecationWarning() string {
	if m != nil && m.DeprecationWarning != nil {
		return *m.DeprecationWarning
	}
	return ""
}

func (m *CustomResourceDefinitionVersion) GetSchema() *CustomResourceValidation {
	if m != nil {
		return m.Schema
	}
	return nil
}

func (m *CustomResourceDefinitionVersion) GetSubresources() *CustomResourceSubresources {
	if m != nil {
		return m.Subresources
	}
	return nil
}

func (m *CustomResourceDefinitionVersion) GetAdditionalPrinterColumns() []*CustomResourceColumnDefinition {
	if m != nil {
		return m.AdditionalPrinterColumns
	}
	return nil
}

// CustomResourceSubresourceScale defines how to serve the scale subresource for CustomResources.
type CustomResourceSubresourceScale struct {
	// specReplicasPath defines the JSON path inside of a custom resource that corresponds to Scale `spec.replicas`.
	// Only JSON paths without the array notation are allowed.
	// Must be a JSON Path under `.spec`.
	// If there is no value under the given path in the custom resource, the `/scale` subresource will return an error on GET.
	SpecReplicasPath *string `protobuf:"bytes,1,opt,name=specReplicasPath" json:"specReplicasPath,omitempty"`
	// statusReplicasPath defines the JSON path inside of a custom resource that corresponds to Scale `status.replicas`.
	// Only JSON paths without the array notation are allowed.
	// Must be a JSON Path under `.status`.
	// If there is no value under the given path in the custom resource, the `status.replicas` value in the `/scale` subresource
	// will default to 0.
	StatusReplicasPath *string `protobuf:"bytes,2,opt,name=statusReplicasPath" json:"statusReplicasPath,omitempty"`
	// labelSelectorPath defines the JSON path inside of a custom resource that corresponds to Scale `status.selector`.
	// Only JSON paths without the array notation are allowed.
	// Must be a JSON Path under `.status` or `.spec`.
	// Must be set to work with HorizontalPodAutoscaler.
	// The field pointed by this JSON path must be a string field (not a complex selector struct)
	// which contains a serialized label selector in string form.
	// More info: https://kubernetes.io/docs/tasks/access-kubernetes-api/custom-resources/custom-resource-definitions#scale-subresource
	// If there is no value under the given path in the custom resource, the `status.selector` value in the `/scale`
	// subresource will default to the empty string.
	// +optional
	LabelSelectorPath *string `protobuf:"bytes,3,opt,name=labelSelectorPath" json:"labelSelectorPath,omitempty"`
	XXX_unrecognized  []byte  `json:"-"`
}

func (m *CustomResourceSubresourceScale) Reset()         { *m = CustomResourceSubresourceScale{} }
func (m *CustomResourceSubresourceScale) String() string { return proto.CompactTextString(m) }
func (*CustomResourceSubresourceScale) ProtoMessage()    {}
func (*CustomResourceSubresourceScale) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{12}
}

func (m *CustomResourceSubresourceScale) GetSpecReplicasPath() string {
	if m != nil && m.SpecReplicasPath != nil {
		return *m.SpecReplicasPath
	}
	return ""
}

func (m *CustomResourceSubresourceScale) GetStatusReplicasPath() string {
	if m != nil && m.StatusReplicasPath != nil {
		return *m.StatusReplicasPath
	}
	return ""
}

func (m *CustomResourceSubresourceScale) GetLabelSelectorPath() string {
	if m != nil && m.LabelSelectorPath != nil {
		return *m.LabelSelectorPath
	}
	return ""
}

// CustomResourceSubresourceStatus defines how to serve the status subresource for CustomResources.
// Status is represented by the `.status` JSON path inside of a CustomResource. When set,
// * exposes a /status subresource for the custom resource
// * PUT requests to the /status subresource take a custom resource object, and ignore changes to anything except the status stanza
// * PUT/POST/PATCH requests to the custom resource ignore changes to the status stanza
type CustomResourceSubresourceStatus struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CustomResourceSubresourceStatus) Reset()         { *m = CustomResourceSubresourceStatus{} }
func (m *CustomResourceSubresourceStatus) String() string { return proto.CompactTextString(m) }
func (*CustomResourceSubresourceStatus) ProtoMessage()    {}
func (*CustomResourceSubresourceStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{13}
}

// CustomResourceSubresources defines the status and scale subresources for CustomResources.
type CustomResourceSubresources struct {
	// status indicates the custom resource should serve a `/status` subresource.
	// When enabled:
	// 1. requests to the custom resource primary endpoint ignore changes to the `status` stanza of the object.
	// 2. requests to the custom resource `/status` subresource ignore changes to anything other than the `status` stanza of the object.
	// +optional
	Status *CustomResourceSubresourceStatus `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	// scale indicates the custom resource should serve a `/scale` subresource that returns an `autoscaling/v1` Scale object.
	// +optional
	Scale            *CustomResourceSubresourceScale `protobuf:"bytes,2,opt,name=scale" json:"scale,omitempty"`
	XXX_unrecognized []byte                          `json:"-"`
}

func (m *CustomResourceSubresources) Reset()                    { *m = CustomResourceSubresources{} }
func (m *CustomResourceSubresources) String() string            { return proto.CompactTextString(m) }
func (*CustomResourceSubresources) ProtoMessage()               {}
func (*CustomResourceSubresources) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *CustomResourceSubresources) GetStatus() *CustomResourceSubresourceStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *CustomResourceSubresources) GetScale() *CustomResourceSubresourceScale {
	if m != nil {
		return m.Scale
	}
	return nil
}

// CustomResourceValidation is a list of validation methods for CustomResources.
type CustomResourceValidation struct {
	// openAPIV3Schema is the OpenAPI v3 schema to use for validation and pruning.
	// +optional
	OpenAPIV3Schema  *JSONSchemaProps `protobuf:"bytes,1,opt,name=openAPIV3Schema" json:"openAPIV3Schema,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *CustomResourceValidation) Reset()                    { *m = CustomResourceValidation{} }
func (m *CustomResourceValidation) String() string            { return proto.CompactTextString(m) }
func (*CustomResourceValidation) ProtoMessage()               {}
func (*CustomResourceValidation) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *CustomResourceValidation) GetOpenAPIV3Schema() *JSONSchemaProps {
	if m != nil {
		return m.OpenAPIV3Schema
	}
	return nil
}

// ExternalDocumentation allows referencing an external resource for extended documentation.
type ExternalDocumentation struct {
	Description      *string `protobuf:"bytes,1,opt,name=description" json:"description,omitempty"`
	Url              *string `protobuf:"bytes,2,opt,name=url" json:"url,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ExternalDocumentation) Reset()                    { *m = ExternalDocumentation{} }
func (m *ExternalDocumentation) String() string            { return proto.CompactTextString(m) }
func (*ExternalDocumentation) ProtoMessage()               {}
func (*ExternalDocumentation) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *ExternalDocumentation) GetDescription() string {
	if m != nil && m.Description != nil {
		return *m.Description
	}
	return ""
}

func (m *ExternalDocumentation) GetUrl() string {
	if m != nil && m.Url != nil {
		return *m.Url
	}
	return ""
}

// JSON represents any valid JSON value.
// These types are supported: bool, int64, float64, string, []interface{}, map[string]interface{} and nil.
type JSON struct {
	Raw              []byte `protobuf:"bytes,1,opt,name=raw" json:"raw,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *JSON) Reset()                    { *m = JSON{} }
func (m *JSON) String() string            { return proto.CompactTextString(m) }
func (*JSON) ProtoMessage()               {}
func (*JSON) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *JSON) GetRaw() []byte {
	if m != nil {
		return m.Raw
	}
	return nil
}

// JSONSchemaProps is a JSON-Schema following Specification Draft 4 (http://json-schema.org/).
type JSONSchemaProps struct {
	Id          *string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Schema      *string `protobuf:"bytes,2,opt,name=schema" json:"schema,omitempty"`
	Ref         *string `protobuf:"bytes,3,opt,name=ref" json:"ref,omitempty"`
	Description *string `protobuf:"bytes,4,opt,name=description" json:"description,omitempty"`
	Type        *string `protobuf:"bytes,5,opt,name=type" json:"type,omitempty"`
	// format is an OpenAPI v3 format string. Unknown formats are ignored. The following formats are validated:
	//
	// - bsonobjectid: a bson object ID, i.e. a 24 characters hex string
	// - uri: an URI as parsed by Golang net/url.ParseRequestURI
	// - email: an email address as parsed by Golang net/mail.ParseAddress
	// - hostname: a valid representation for an Internet host name, as defined by RFC 1034, section 3.1 [RFC1034].
	// - ipv4: an IPv4 IP as parsed by Golang net.ParseIP
	// - ipv6: an IPv6 IP as parsed by Golang net.ParseIP
	// - cidr: a CIDR as parsed by Golang net.ParseCIDR
	// - mac: a MAC address as parsed by Golang net.ParseMAC
	// - uuid: an UUID that allows uppercase defined by the regex (?i)^[0-9a-f]{8}-?[0-9a-f]{4}-?[0-9a-f]{4}-?[0-9a-f]{4}-?[0-9a-f]{12}$
	// - uuid3: an UUID3 that allows uppercase defined by the regex (?i)^[0-9a-f]{8}-?[0-9a-f]{4}-?3[0-9a-f]{3}-?[0-9a-f]{4}-?[0-9a-f]{12}$
	// - uuid4: an UUID4 that allows uppercase defined by the regex (?i)^[0-9a-f]{8}-?[0-9a-f]{4}-?4[0-9a-f]{3}-?[89ab][0-9a-f]{3}-?[0-9a-f]{12}$
	// - uuid5: an UUID5 that allows uppercase defined by the regex (?i)^[0-9a-f]{8}-?[0-9a-f]{4}-?5[0-9a-f]{3}-?[89ab][0-9a-f]{3}-?[0-9a-f]{12}$
	// - isbn: an ISBN10 or ISBN13 number string like "0321751043" or "978-0321751041"
	// - isbn10: an ISBN10 number string like "0321751043"
	// - isbn13: an ISBN13 number string like "978-0321751041"
	// - creditcard: a credit card number defined by the regex ^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\\d{3})\\d{11})$ with any non digit characters mixed in
	// - ssn: a U.S. social security number following the regex ^\\d{3}[- ]?\\d{2}[- ]?\\d{4}$
	// - hexcolor: an hexadecimal color code like "#FFFFFF: following the regex ^#?([0-9a-fA-F]{3}|[0-9a-fA-F]{6})$
	// - rgbcolor: an RGB color code like rgb like "rgb(255,255,2559"
	// - byte: base64 encoded binary data
	// - password: any kind of string
	// - date: a date string like "2006-01-02" as defined by full-date in RFC3339
	// - duration: a duration string like "22 ns" as parsed by Golang time.ParseDuration or compatible with Scala duration format
	// - datetime: a date time string like "2014-12-15T19:30:20.000Z" as defined by date-time in RFC3339.
	Format *string `protobuf:"bytes,6,opt,name=format" json:"format,omitempty"`
	Title  *string `protobuf:"bytes,7,opt,name=title" json:"title,omitempty"`
	// default is a default value for undefined object fields.
	// Defaulting is a beta feature under the CustomResourceDefaulting feature gate.
	// Defaulting requires spec.preserveUnknownFields to be false.
	Default              *JSON                                    `protobuf:"bytes,8,opt,name=default" json:"default,omitempty"`
	Maximum              *float64                                 `protobuf:"fixed64,9,opt,name=maximum" json:"maximum,omitempty"`
	ExclusiveMaximum     *bool                                    `protobuf:"varint,10,opt,name=exclusiveMaximum" json:"exclusiveMaximum,omitempty"`
	Minimum              *float64                                 `protobuf:"fixed64,11,opt,name=minimum" json:"minimum,omitempty"`
	ExclusiveMinimum     *bool                                    `protobuf:"varint,12,opt,name=exclusiveMinimum" json:"exclusiveMinimum,omitempty"`
	MaxLength            *int64                                   `protobuf:"varint,13,opt,name=maxLength" json:"maxLength,omitempty"`
	MinLength            *int64                                   `protobuf:"varint,14,opt,name=minLength" json:"minLength,omitempty"`
	Pattern              *string                                  `protobuf:"bytes,15,opt,name=pattern" json:"pattern,omitempty"`
	MaxItems             *int64                                   `protobuf:"varint,16,opt,name=maxItems" json:"maxItems,omitempty"`
	MinItems             *int64                                   `protobuf:"varint,17,opt,name=minItems" json:"minItems,omitempty"`
	UniqueItems          *bool                                    `protobuf:"varint,18,opt,name=uniqueItems" json:"uniqueItems,omitempty"`
	MultipleOf           *float64                                 `protobuf:"fixed64,19,opt,name=multipleOf" json:"multipleOf,omitempty"`
	Enum                 []*JSON                                  `protobuf:"bytes,20,rep,name=enum" json:"enum,omitempty"`
	MaxProperties        *int64                                   `protobuf:"varint,21,opt,name=maxProperties" json:"maxProperties,omitempty"`
	MinProperties        *int64                                   `protobuf:"varint,22,opt,name=minProperties" json:"minProperties,omitempty"`
	Required             []string                                 `protobuf:"bytes,23,rep,name=required" json:"required,omitempty"`
	Items                *JSONSchemaPropsOrArray                  `protobuf:"bytes,24,opt,name=items" json:"items,omitempty"`
	AllOf                []*JSONSchemaProps                       `protobuf:"bytes,25,rep,name=allOf" json:"allOf,omitempty"`
	OneOf                []*JSONSchemaProps                       `protobuf:"bytes,26,rep,name=oneOf" json:"oneOf,omitempty"`
	AnyOf                []*JSONSchemaProps                       `protobuf:"bytes,27,rep,name=anyOf" json:"anyOf,omitempty"`
	Not                  *JSONSchemaProps                         `protobuf:"bytes,28,opt,name=not" json:"not,omitempty"`
	Properties           map[string]*JSONSchemaProps              `protobuf:"bytes,29,rep,name=properties" json:"properties,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	AdditionalProperties *JSONSchemaPropsOrBool                   `protobuf:"bytes,30,opt,name=additionalProperties" json:"additionalProperties,omitempty"`
	PatternProperties    map[string]*JSONSchemaProps              `protobuf:"bytes,31,rep,name=patternProperties" json:"patternProperties,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Dependencies         map[string]*JSONSchemaPropsOrStringArray `protobuf:"bytes,32,rep,name=dependencies" json:"dependencies,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	AdditionalItems      *JSONSchemaPropsOrBool                   `protobuf:"bytes,33,opt,name=additionalItems" json:"additionalItems,omitempty"`
	Definitions          map[string]*JSONSchemaProps              `protobuf:"bytes,34,rep,name=definitions" json:"definitions,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	ExternalDocs         *ExternalDocumentation                   `protobuf:"bytes,35,opt,name=externalDocs" json:"externalDocs,omitempty"`
	Example              *JSON                                    `protobuf:"bytes,36,opt,name=example" json:"example,omitempty"`
	Nullable             *bool                                    `protobuf:"varint,37,opt,name=nullable" json:"nullable,omitempty"`
	// x-kubernetes-preserve-unknown-fields stops the API server
	// decoding step from pruning fields which are not specified
	// in the validation schema. This affects fields recursively,
	// but switches back to normal pruning behaviour if nested
	// properties or additionalProperties are specified in the schema.
	// This can either be true or undefined. False is forbidden.
	XKubernetesPreserveUnknownFields *bool `protobuf:"varint,38,opt,name=xKubernetesPreserveUnknownFields" json:"xKubernetesPreserveUnknownFields,omitempty"`
	// x-kubernetes-embedded-resource defines that the value is an
	// embedded Kubernetes runtime.Object, with TypeMeta and
	// ObjectMeta. The type must be object. It is allowed to further
	// restrict the embedded object. kind, apiVersion and metadata
	// are validated automatically. x-kubernetes-preserve-unknown-fields
	// is allowed to be true, but does not have to be if the object
	// is fully specified (up to kind, apiVersion, metadata).
	XKubernetesEmbeddedResource *bool `protobuf:"varint,39,opt,name=xKubernetesEmbeddedResource" json:"xKubernetesEmbeddedResource,omitempty"`
	// x-kubernetes-int-or-string specifies that this value is
	// either an integer or a string. If this is true, an empty
	// type is allowed and type as child of anyOf is permitted
	// if following one of the following patterns:
	//
	// 1) anyOf:
	//    - type: integer
	//    - type: string
	// 2) allOf:
	//    - anyOf:
	//      - type: integer
	//      - type: string
	//    - ... zero or more
	XKubernetesIntOrString *bool `protobuf:"varint,40,opt,name=xKubernetesIntOrString" json:"xKubernetesIntOrString,omitempty"`
	// x-kubernetes-list-map-keys annotates an array with the x-kubernetes-list-type `map` by specifying the keys used
	// as the index of the map.
	//
	// This tag MUST only be used on lists that have the "x-kubernetes-list-type"
	// extension set to "map". Also, the values specified for this attribute must
	// be a scalar typed field of the child structure (no nesting is supported).
	//
	// The properties specified must either be required or have a default value,
	// to ensure those properties are present for all list items.
	//
	// +optional
	XKubernetesListMapKeys []string `protobuf:"bytes,41,rep,name=xKubernetesListMapKeys" json:"xKubernetesListMapKeys,omitempty"`
	// x-kubernetes-list-type annotates an array to further describe its topology.
	// This extension must only be used on lists and may have 3 possible values:
	//
	// 1) `atomic`: the list is treated as a single entity, like a scalar.
	//      Atomic lists will be entirely replaced when updated. This extension
	//      may be used on any type of list (struct, scalar, ...).
	// 2) `set`:
	//      Sets are lists that must not have multiple items with the same value. Each
	//      value must be a scalar, an object with x-kubernetes-map-type `atomic` or an
	//      array with x-kubernetes-list-type `atomic`.
	// 3) `map`:
	//      These lists are like maps in that their elements have a non-index key
	//      used to identify them. Order is preserved upon merge. The map tag
	//      must only be used on a list with elements of type object.
	// Defaults to atomic for arrays.
	// +optional
	XKubernetesListType *string `protobuf:"bytes,42,opt,name=xKubernetesListType" json:"xKubernetesListType,omitempty"`
	// x-kubernetes-map-type annotates an object to further describe its topology.
	// This extension must only be used when type is object and may have 2 possible values:
	//
	// 1) `granular`:
	//      These maps are actual maps (key-value pairs) and each fields are independent
	//      from each other (they can each be manipulated by separate actors). This is
	//      the default behaviour for all maps.
	// 2) `atomic`: the list is treated as a single entity, like a scalar.
	//      Atomic maps will be entirely replaced when updated.
	// +optional
	XKubernetesMapType *string `protobuf:"bytes,43,opt,name=xKubernetesMapType" json:"xKubernetesMapType,omitempty"`
	XXX_unrecognized   []byte  `json:"-"`
}

func (m *JSONSchemaProps) Reset()                    { *m = JSONSchemaProps{} }
func (m *JSONSchemaProps) String() string            { return proto.CompactTextString(m) }
func (*JSONSchemaProps) ProtoMessage()               {}
func (*JSONSchemaProps) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

func (m *JSONSchemaProps) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *JSONSchemaProps) GetSchema() string {
	if m != nil && m.Schema != nil {
		return *m.Schema
	}
	return ""
}

func (m *JSONSchemaProps) GetRef() string {
	if m != nil && m.Ref != nil {
		return *m.Ref
	}
	return ""
}

func (m *JSONSchemaProps) GetDescription() string {
	if m != nil && m.Description != nil {
		return *m.Description
	}
	return ""
}

func (m *JSONSchemaProps) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

func (m *JSONSchemaProps) GetFormat() string {
	if m != nil && m.Format != nil {
		return *m.Format
	}
	return ""
}

func (m *JSONSchemaProps) GetTitle() string {
	if m != nil && m.Title != nil {
		return *m.Title
	}
	return ""
}

func (m *JSONSchemaProps) GetDefault() *JSON {
	if m != nil {
		return m.Default
	}
	return nil
}

func (m *JSONSchemaProps) GetMaximum() float64 {
	if m != nil && m.Maximum != nil {
		return *m.Maximum
	}
	return 0
}

func (m *JSONSchemaProps) GetExclusiveMaximum() bool {
	if m != nil && m.ExclusiveMaximum != nil {
		return *m.ExclusiveMaximum
	}
	return false
}

func (m *JSONSchemaProps) GetMinimum() float64 {
	if m != nil && m.Minimum != nil {
		return *m.Minimum
	}
	return 0
}

func (m *JSONSchemaProps) GetExclusiveMinimum() bool {
	if m != nil && m.ExclusiveMinimum != nil {
		return *m.ExclusiveMinimum
	}
	return false
}

func (m *JSONSchemaProps) GetMaxLength() int64 {
	if m != nil && m.MaxLength != nil {
		return *m.MaxLength
	}
	return 0
}

func (m *JSONSchemaProps) GetMinLength() int64 {
	if m != nil && m.MinLength != nil {
		return *m.MinLength
	}
	return 0
}

func (m *JSONSchemaProps) GetPattern() string {
	if m != nil && m.Pattern != nil {
		return *m.Pattern
	}
	return ""
}

func (m *JSONSchemaProps) GetMaxItems() int64 {
	if m != nil && m.MaxItems != nil {
		return *m.MaxItems
	}
	return 0
}

func (m *JSONSchemaProps) GetMinItems() int64 {
	if m != nil && m.MinItems != nil {
		return *m.MinItems
	}
	return 0
}

func (m *JSONSchemaProps) GetUniqueItems() bool {
	if m != nil && m.UniqueItems != nil {
		return *m.UniqueItems
	}
	return false
}

func (m *JSONSchemaProps) GetMultipleOf() float64 {
	if m != nil && m.MultipleOf != nil {
		return *m.MultipleOf
	}
	return 0
}

func (m *JSONSchemaProps) GetEnum() []*JSON {
	if m != nil {
		return m.Enum
	}
	return nil
}

func (m *JSONSchemaProps) GetMaxProperties() int64 {
	if m != nil && m.MaxProperties != nil {
		return *m.MaxProperties
	}
	return 0
}

func (m *JSONSchemaProps) GetMinProperties() int64 {
	if m != nil && m.MinProperties != nil {
		return *m.MinProperties
	}
	return 0
}

func (m *JSONSchemaProps) GetRequired() []string {
	if m != nil {
		return m.Required
	}
	return nil
}

func (m *JSONSchemaProps) GetItems() *JSONSchemaPropsOrArray {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *JSONSchemaProps) GetAllOf() []*JSONSchemaProps {
	if m != nil {
		return m.AllOf
	}
	return nil
}

func (m *JSONSchemaProps) GetOneOf() []*JSONSchemaProps {
	if m != nil {
		return m.OneOf
	}
	return nil
}

func (m *JSONSchemaProps) GetAnyOf() []*JSONSchemaProps {
	if m != nil {
		return m.AnyOf
	}
	return nil
}

func (m *JSONSchemaProps) GetNot() *JSONSchemaProps {
	if m != nil {
		return m.Not
	}
	return nil
}

func (m *JSONSchemaProps) GetProperties() map[string]*JSONSchemaProps {
	if m != nil {
		return m.Properties
	}
	return nil
}

func (m *JSONSchemaProps) GetAdditionalProperties() *JSONSchemaPropsOrBool {
	if m != nil {
		return m.AdditionalProperties
	}
	return nil
}

func (m *JSONSchemaProps) GetPatternProperties() map[string]*JSONSchemaProps {
	if m != nil {
		return m.PatternProperties
	}
	return nil
}

func (m *JSONSchemaProps) GetDependencies() map[string]*JSONSchemaPropsOrStringArray {
	if m != nil {
		return m.Dependencies
	}
	return nil
}

func (m *JSONSchemaProps) GetAdditionalItems() *JSONSchemaPropsOrBool {
	if m != nil {
		return m.AdditionalItems
	}
	return nil
}

func (m *JSONSchemaProps) GetDefinitions() map[string]*JSONSchemaProps {
	if m != nil {
		return m.Definitions
	}
	return nil
}

func (m *JSONSchemaProps) GetExternalDocs() *ExternalDocumentation {
	if m != nil {
		return m.ExternalDocs
	}
	return nil
}

func (m *JSONSchemaProps) GetExample() *JSON {
	if m != nil {
		return m.Example
	}
	return nil
}

func (m *JSONSchemaProps) GetNullable() bool {
	if m != nil && m.Nullable != nil {
		return *m.Nullable
	}
	return false
}

func (m *JSONSchemaProps) GetXKubernetesPreserveUnknownFields() bool {
	if m != nil && m.XKubernetesPreserveUnknownFields != nil {
		return *m.XKubernetesPreserveUnknownFields
	}
	return false
}

func (m *JSONSchemaProps) GetXKubernetesEmbeddedResource() bool {
	if m != nil && m.XKubernetesEmbeddedResource != nil {
		return *m.XKubernetesEmbeddedResource
	}
	return false
}

func (m *JSONSchemaProps) GetXKubernetesIntOrString() bool {
	if m != nil && m.XKubernetesIntOrString != nil {
		return *m.XKubernetesIntOrString
	}
	return false
}

func (m *JSONSchemaProps) GetXKubernetesListMapKeys() []string {
	if m != nil {
		return m.XKubernetesListMapKeys
	}
	return nil
}

func (m *JSONSchemaProps) GetXKubernetesListType() string {
	if m != nil && m.XKubernetesListType != nil {
		return *m.XKubernetesListType
	}
	return ""
}

func (m *JSONSchemaProps) GetXKubernetesMapType() string {
	if m != nil && m.XKubernetesMapType != nil {
		return *m.XKubernetesMapType
	}
	return ""
}

// JSONSchemaPropsOrArray represents a value that can either be a JSONSchemaProps
// or an array of JSONSchemaProps. Mainly here for serialization purposes.
type JSONSchemaPropsOrArray struct {
	Schema           *JSONSchemaProps   `protobuf:"bytes,1,opt,name=schema" json:"schema,omitempty"`
	JSONSchemas      []*JSONSchemaProps `protobuf:"bytes,2,rep,name=jSONSchemas" json:"jSONSchemas,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *JSONSchemaPropsOrArray) Reset()                    { *m = JSONSchemaPropsOrArray{} }
func (m *JSONSchemaPropsOrArray) String() string            { return proto.CompactTextString(m) }
func (*JSONSchemaPropsOrArray) ProtoMessage()               {}
func (*JSONSchemaPropsOrArray) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

func (m *JSONSchemaPropsOrArray) GetSchema() *JSONSchemaProps {
	if m != nil {
		return m.Schema
	}
	return nil
}

func (m *JSONSchemaPropsOrArray) GetJSONSchemas() []*JSONSchemaProps {
	if m != nil {
		return m.JSONSchemas
	}
	return nil
}

// JSONSchemaPropsOrBool represents JSONSchemaProps or a boolean value.
// Defaults to true for the boolean property.
type JSONSchemaPropsOrBool struct {
	Allows           *bool            `protobuf:"varint,1,opt,name=allows" json:"allows,omitempty"`
	Schema           *JSONSchemaProps `protobuf:"bytes,2,opt,name=schema" json:"schema,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *JSONSchemaPropsOrBool) Reset()                    { *m = JSONSchemaPropsOrBool{} }
func (m *JSONSchemaPropsOrBool) String() string            { return proto.CompactTextString(m) }
func (*JSONSchemaPropsOrBool) ProtoMessage()               {}
func (*JSONSchemaPropsOrBool) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20} }

func (m *JSONSchemaPropsOrBool) GetAllows() bool {
	if m != nil && m.Allows != nil {
		return *m.Allows
	}
	return false
}

func (m *JSONSchemaPropsOrBool) GetSchema() *JSONSchemaProps {
	if m != nil {
		return m.Schema
	}
	return nil
}

// JSONSchemaPropsOrStringArray represents a JSONSchemaProps or a string array.
type JSONSchemaPropsOrStringArray struct {
	Schema           *JSONSchemaProps `protobuf:"bytes,1,opt,name=schema" json:"schema,omitempty"`
	Property         []string         `protobuf:"bytes,2,rep,name=property" json:"property,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *JSONSchemaPropsOrStringArray) Reset()                    { *m = JSONSchemaPropsOrStringArray{} }
func (m *JSONSchemaPropsOrStringArray) String() string            { return proto.CompactTextString(m) }
func (*JSONSchemaPropsOrStringArray) ProtoMessage()               {}
func (*JSONSchemaPropsOrStringArray) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{21} }

func (m *JSONSchemaPropsOrStringArray) GetSchema() *JSONSchemaProps {
	if m != nil {
		return m.Schema
	}
	return nil
}

func (m *JSONSchemaPropsOrStringArray) GetProperty() []string {
	if m != nil {
		return m.Property
	}
	return nil
}

// ServiceReference holds a reference to Service.legacy.k8s.io
type ServiceReference struct {
	// namespace is the namespace of the service.
	// Required
	Namespace *string `protobuf:"bytes,1,opt,name=namespace" json:"namespace,omitempty"`
	// name is the name of the service.
	// Required
	Name *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	// path is an optional URL path at which the webhook will be contacted.
	// +optional
	Path *string `protobuf:"bytes,3,opt,name=path" json:"path,omitempty"`
	// port is an optional service port at which the webhook will be contacted.
	// `port` should be a valid port number (1-65535, inclusive).
	// Defaults to 443 for backward compatibility.
	// +optional
	Port             *int32 `protobuf:"varint,4,opt,name=port" json:"port,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *ServiceReference) Reset()                    { *m = ServiceReference{} }
func (m *ServiceReference) String() string            { return proto.CompactTextString(m) }
func (*ServiceReference) ProtoMessage()               {}
func (*ServiceReference) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{22} }

func (m *ServiceReference) GetNamespace() string {
	if m != nil && m.Namespace != nil {
		return *m.Namespace
	}
	return ""
}

func (m *ServiceReference) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *ServiceReference) GetPath() string {
	if m != nil && m.Path != nil {
		return *m.Path
	}
	return ""
}

func (m *ServiceReference) GetPort() int32 {
	if m != nil && m.Port != nil {
		return *m.Port
	}
	return 0
}

// WebhookClientConfig contains the information to make a TLS connection with the webhook.
type WebhookClientConfig struct {
	// url gives the location of the webhook, in standard URL form
	// (`scheme://host:port/path`). Exactly one of `url` or `service`
	// must be specified.
	//
	// The `host` should not refer to a service running in the cluster; use
	// the `service` field instead. The host might be resolved via external
	// DNS in some apiservers (e.g., `kube-apiserver` cannot resolve
	// in-cluster DNS as that would be a layering violation). `host` may
	// also be an IP address.
	//
	// Please note that using `localhost` or `127.0.0.1` as a `host` is
	// risky unless you take great care to run this webhook on all hosts
	// which run an apiserver which might need to make calls to this
	// webhook. Such installs are likely to be non-portable, i.e., not easy
	// to turn up in a new cluster.
	//
	// The scheme must be "https"; the URL must begin with "https://".
	//
	// A path is optional, and if present may be any string permissible in
	// a URL. You may use the path to pass an arbitrary string to the
	// webhook, for example, a cluster identifier.
	//
	// Attempting to use a user or basic auth e.g. "user:password@" is not
	// allowed. Fragments ("#...") and query parameters ("?...") are not
	// allowed, either.
	//
	// +optional
	Url *string `protobuf:"bytes,3,opt,name=url" json:"url,omitempty"`
	// service is a reference to the service for this webhook. Either
	// service or url must be specified.
	//
	// If the webhook is running within the cluster, then you should use `service`.
	//
	// +optional
	Service *ServiceReference `protobuf:"bytes,1,opt,name=service" json:"service,omitempty"`
	// caBundle is a PEM encoded CA bundle which will be used to validate the webhook's server certificate.
	// If unspecified, system trust roots on the apiserver are used.
	// +optional
	CaBundle         []byte `protobuf:"bytes,2,opt,name=caBundle" json:"caBundle,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *WebhookClientConfig) Reset()                    { *m = WebhookClientConfig{} }
func (m *WebhookClientConfig) String() string            { return proto.CompactTextString(m) }
func (*WebhookClientConfig) ProtoMessage()               {}
func (*WebhookClientConfig) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{23} }

func (m *WebhookClientConfig) GetUrl() string {
	if m != nil && m.Url != nil {
		return *m.Url
	}
	return ""
}

func (m *WebhookClientConfig) GetService() *ServiceReference {
	if m != nil {
		return m.Service
	}
	return nil
}

func (m *WebhookClientConfig) GetCaBundle() []byte {
	if m != nil {
		return m.CaBundle
	}
	return nil
}

// WebhookConversion describes how to call a conversion webhook
type WebhookConversion struct {
	// clientConfig is the instructions for how to call the webhook if strategy is `Webhook`.
	// +optional
	ClientConfig *WebhookClientConfig `protobuf:"bytes,2,opt,name=clientConfig" json:"clientConfig,omitempty"`
	// conversionReviewVersions is an ordered list of preferred `ConversionReview`
	// versions the Webhook expects. The API server will use the first version in
	// the list which it supports. If none of the versions specified in this list
	// are supported by API server, conversion will fail for the custom resource.
	// If a persisted Webhook configuration specifies allowed versions and does not
	// include any versions known to the API Server, calls to the webhook will fail.
	ConversionReviewVersions []string `protobuf:"bytes,3,rep,name=conversionReviewVersions" json:"conversionReviewVersions,omitempty"`
	XXX_unrecognized         []byte   `json:"-"`
}

func (m *WebhookConversion) Reset()                    { *m = WebhookConversion{} }
func (m *WebhookConversion) String() string            { return proto.CompactTextString(m) }
func (*WebhookConversion) ProtoMessage()               {}
func (*WebhookConversion) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{24} }

func (m *WebhookConversion) GetClientConfig() *WebhookClientConfig {
	if m != nil {
		return m.ClientConfig
	}
	return nil
}

func (m *WebhookConversion) GetConversionReviewVersions() []string {
	if m != nil {
		return m.ConversionReviewVersions
	}
	return nil
}

func init() {
	proto.RegisterType((*ConversionRequest)(nil), "k8s.io.apiextensions_apiserver.pkg.apis.apiextensions.v1.ConversionRequest")
	proto.RegisterType((*ConversionResponse)(nil), "k8s.io.apiextensions_apiserver.pkg.apis.apiextensions.v1.ConversionResponse")
	proto.RegisterType((*ConversionReview)(nil), "k8s.io.apiextensions_apiserver.pkg.apis.apiextensions.v1.ConversionReview")
	proto.RegisterType((*CustomResourceColumnDefinition)(nil), "k8s.io.apiextensions_apiserver.pkg.apis.apiextensions.v1.CustomResourceColumnDefinition")
	proto.RegisterType((*CustomResourceConversion)(nil), "k8s.io.apiextensions_apiserver.pkg.apis.apiextensions.v1.CustomResourceConversion")
	proto.RegisterType((*CustomResourceDefinition)(nil), "k8s.io.apiextensions_apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinition")
	proto.RegisterType((*CustomResourceDefinitionCondition)(nil), "k8s.io.apiextensions_apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionCondition")
	proto.RegisterType((*CustomResourceDefinitionList)(nil), "k8s.io.apiextensions_apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionList")
	proto.RegisterType((*CustomResourceDefinitionNames)(nil), "k8s.io.apiextensions_apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionNames")
	proto.RegisterType((*CustomResourceDefinitionSpec)(nil), "k8s.io.apiextensions_apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionSpec")
	proto.RegisterType((*CustomResourceDefinitionStatus)(nil), "k8s.io.apiextensions_apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionStatus")
	proto.RegisterType((*CustomResourceDefinitionVersion)(nil), "k8s.io.apiextensions_apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionVersion")
	proto.RegisterType((*CustomResourceSubresourceScale)(nil), "k8s.io.apiextensions_apiserver.pkg.apis.apiextensions.v1.CustomResourceSubresourceScale")
	proto.RegisterType((*CustomResourceSubresourceStatus)(nil), "k8s.io.apiextensions_apiserver.pkg.apis.apiextensions.v1.CustomResourceSubresourceStatus")
	proto.RegisterType((*CustomResourceSubresources)(nil), "k8s.io.apiextensions_apiserver.pkg.apis.apiextensions.v1.CustomResourceSubresources")
	proto.RegisterType((*CustomResourceValidation)(nil), "k8s.io.apiextensions_apiserver.pkg.apis.apiextensions.v1.CustomResourceValidation")
	proto.RegisterType((*ExternalDocumentation)(nil), "k8s.io.apiextensions_apiserver.pkg.apis.apiextensions.v1.ExternalDocumentation")
	proto.RegisterType((*JSON)(nil), "k8s.io.apiextensions_apiserver.pkg.apis.apiextensions.v1.JSON")
	proto.RegisterType((*JSONSchemaProps)(nil), "k8s.io.apiextensions_apiserver.pkg.apis.apiextensions.v1.JSONSchemaProps")
	proto.RegisterType((*JSONSchemaPropsOrArray)(nil), "k8s.io.apiextensions_apiserver.pkg.apis.apiextensions.v1.JSONSchemaPropsOrArray")
	proto.RegisterType((*JSONSchemaPropsOrBool)(nil), "k8s.io.apiextensions_apiserver.pkg.apis.apiextensions.v1.JSONSchemaPropsOrBool")
	proto.RegisterType((*JSONSchemaPropsOrStringArray)(nil), "k8s.io.apiextensions_apiserver.pkg.apis.apiextensions.v1.JSONSchemaPropsOrStringArray")
	proto.RegisterType((*ServiceReference)(nil), "k8s.io.apiextensions_apiserver.pkg.apis.apiextensions.v1.ServiceReference")
	proto.RegisterType((*WebhookClientConfig)(nil), "k8s.io.apiextensions_apiserver.pkg.apis.apiextensions.v1.WebhookClientConfig")
	proto.RegisterType((*WebhookConversion)(nil), "k8s.io.apiextensions_apiserver.pkg.apis.apiextensions.v1.WebhookConversion")
}

func init() { proto.RegisterFile("generated.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 2163 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x39, 0xcb, 0x6f, 0x24, 0x47,
	0xf9, 0xea, 0xf1, 0xbb, 0xec, 0x5d, 0xdb, 0xb5, 0x8f, 0x5f, 0xc7, 0xd9, 0x6c, 0xbc, 0xfd, 0x0b,
	0xc1, 0x2c, 0x61, 0x9c, 0x5d, 0x50, 0xb4, 0xca, 0x01, 0x91, 0x7d, 0x80, 0xf6, 0x15, 0x5b, 0xe5,
	0x65, 0x5f, 0x39, 0x84, 0x72, 0xf7, 0x37, 0x33, 0xb5, 0xee, 0xae, 0x6e, 0x57, 0x55, 0x8f, 0x3d,
	0x02, 0xc4, 0x81, 0x0b, 0x5c, 0x88, 0x84, 0x90, 0xb8, 0x90, 0x13, 0x27, 0x38, 0x73, 0xe2, 0x08,
	0x08, 0xfe, 0x01, 0x4e, 0x48, 0x9c, 0xb8, 0xf0, 0x5f, 0x80, 0xea, 0xd1, 0x3d, 0x3d, 0x3d, 0x33,
	0xd9, 0xd5, 0xba, 0x4d, 0x6e, 0xf5, 0xd5, 0x57, 0xf5, 0xbd, 0xeb, 0x7b, 0x74, 0xa3, 0xd5, 0x2e,
	0x70, 0x10, 0x54, 0x41, 0xd4, 0xce, 0x44, 0xaa, 0x52, 0x7c, 0xe3, 0xe0, 0x86, 0x6c, 0xb3, 0xb4,
	0x4d, 0x33, 0x06, 0xc7, 0x0a, 0xb8, 0x64, 0x29, 0x97, 0x9f, 0xd2, 0x8c, 0x49, 0x10, 0x7d, 0x10,
	0xed, 0xec, 0xa0, 0xab, 0x71, 0x72, 0xf4, 0x40, 0xbb, 0x7f, 0x6d, 0xe3, 0x83, 0x2e, 0x53, 0xbd,
	0x7c, 0xbf, 0x1d, 0xa6, 0xc9, 0x36, 0x08, 0x16, 0x86, 0x3d, 0x46, 0x79, 0x77, 0xfb, 0xe0, 0x86,
	0xdc, 0xd6, 0x17, 0xb6, 0x13, 0x50, 0x74, 0xbb, 0x7f, 0x6d, 0xbb, 0xc6, 0x71, 0xe3, 0xda, 0xf4,
	0x7b, 0x22, 0xe7, 0x8a, 0x25, 0x30, 0x76, 0xe5, 0xc6, 0xcb, 0xaf, 0xc8, 0xb0, 0x07, 0x09, 0xad,
	0xdf, 0x0c, 0x7e, 0xe3, 0xa1, 0xf5, 0x5b, 0x29, 0xef, 0x83, 0xd0, 0x72, 0x13, 0x38, 0xcc, 0x41,
	0x2a, 0xbc, 0x86, 0x66, 0x72, 0x16, 0xf9, 0xde, 0xa6, 0xb7, 0xb5, 0x44, 0xf4, 0x12, 0xbf, 0x87,
	0xd6, 0x23, 0x90, 0x4c, 0x40, 0xf4, 0xd1, 0xee, 0xdd, 0xc7, 0xf6, 0xb4, 0xdf, 0x32, 0xf8, 0x71,
	0x04, 0xfe, 0x1e, 0x5a, 0x48, 0xf7, 0x5f, 0x40, 0xa8, 0xa4, 0x3f, 0xb3, 0x39, 0xb3, 0xb5, 0x7c,
	0xfd, 0x1b, 0xed, 0xa1, 0x19, 0x13, 0x1a, 0xf6, 0x18, 0x07, 0x31, 0x30, 0xb6, 0x73, 0xf2, 0xb5,
	0x09, 0x3d, 0xba, 0x53, 0x98, 0x8f, 0x14, 0xb7, 0x83, 0xbf, 0x79, 0x08, 0x57, 0xc5, 0x93, 0x59,
	0xca, 0x25, 0x4c, 0x90, 0xef, 0x19, 0x5a, 0x0b, 0xcd, 0x39, 0x05, 0xd1, 0x8e, 0x63, 0xdd, 0x7a,
	0x1d, 0xd6, 0x63, 0x64, 0xf0, 0x6d, 0x34, 0x2f, 0x40, 0xe6, 0xb1, 0xf2, 0x67, 0x36, 0xbd, 0xad,
	0xe5, 0xeb, 0xef, 0x4d, 0x25, 0x68, 0xe2, 0x40, 0xbb, 0xb5, 0xdd, 0xbf, 0xd6, 0xde, 0x53, 0x54,
	0xe5, 0x92, 0xb8, 0xbb, 0xc1, 0xbf, 0x3c, 0xb4, 0x56, 0xd5, 0xa4, 0xcf, 0xe0, 0x08, 0x03, 0x5a,
	0x10, 0xd6, 0xe4, 0x46, 0x97, 0xe5, 0xeb, 0xf7, 0xdb, 0xaf, 0x1b, 0x6e, 0xed, 0x31, 0x2f, 0x92,
	0x82, 0x36, 0xee, 0xa1, 0x45, 0xe1, 0x4c, 0x67, 0x7c, 0xb6, 0x7c, 0xfd, 0x41, 0x33, 0x7c, 0x2c,
	0x4d, 0x52, 0x52, 0x0f, 0xfe, 0xe8, 0xa1, 0xcb, 0xb7, 0x72, 0xa9, 0xd2, 0x84, 0x80, 0x4c, 0x73,
	0x11, 0xc2, 0xad, 0x34, 0xce, 0x13, 0x7e, 0x1b, 0x3a, 0x8c, 0x33, 0xa5, 0x63, 0x03, 0xa3, 0x59,
	0x4e, 0x13, 0x70, 0xce, 0x33, 0x6b, 0xbd, 0xa7, 0x06, 0x19, 0xb8, 0x80, 0x32, 0x6b, 0x7c, 0x11,
	0xcd, 0x77, 0x52, 0x91, 0x50, 0x6b, 0xf6, 0x25, 0xe2, 0x20, 0xbc, 0x89, 0x96, 0x23, 0x90, 0xa1,
	0x60, 0x99, 0x26, 0xe7, 0xcf, 0x1a, 0x64, 0x75, 0x0b, 0x6f, 0xa0, 0xc5, 0x4c, 0xb0, 0x54, 0x30,
	0x35, 0xf0, 0xe7, 0x36, 0xbd, 0xad, 0x39, 0x52, 0xc2, 0x1a, 0xf7, 0x42, 0xa6, 0x7c, 0x97, 0xaa,
	0x9e, 0x3f, 0x6f, 0xae, 0x96, 0x70, 0xf0, 0xb9, 0x87, 0xfc, 0xba, 0xf0, 0x85, 0xae, 0xfa, 0xa2,
	0x54, 0xfa, 0xe5, 0x74, 0x07, 0x4e, 0xf4, 0x12, 0xd6, 0x6e, 0x3c, 0x82, 0xfd, 0x5e, 0x9a, 0x1e,
	0x38, 0xf3, 0x9e, 0xc0, 0x8d, 0x4f, 0x2c, 0xa1, 0x8a, 0x95, 0x0b, 0xda, 0xc1, 0x5f, 0x5b, 0x75,
	0xf9, 0x2a, 0x66, 0x7d, 0x80, 0x16, 0x75, 0xe4, 0x45, 0x54, 0x51, 0x17, 0x4b, 0xef, 0xbf, 0x5a,
	0x9c, 0xda, 0x30, 0x7f, 0x08, 0x8a, 0x92, 0x92, 0x02, 0x7e, 0x81, 0x66, 0x65, 0x06, 0xa1, 0x53,
	0xe7, 0xf1, 0x09, 0xa2, 0x65, 0x8a, 0xbc, 0x7b, 0x19, 0x84, 0xc4, 0xf0, 0xc0, 0x19, 0x9a, 0x97,
	0xe6, 0xad, 0xb8, 0xf7, 0xf5, 0xf4, 0x14, 0xb8, 0xb9, 0xb7, 0x68, 0xf9, 0x04, 0xff, 0xf4, 0xd0,
	0x95, 0x69, 0x47, 0x6f, 0xa5, 0x3c, 0x2a, 0x03, 0xd5, 0x04, 0xa5, 0x37, 0x1a, 0x94, 0x4e, 0x56,
	0x1b, 0xaa, 0x0e, 0xc2, 0xcf, 0x11, 0x8e, 0xa9, 0x54, 0x8f, 0x04, 0xe5, 0xd2, 0xdc, 0x7e, 0xc4,
	0x12, 0x70, 0xfa, 0x5c, 0x7d, 0x35, 0x3f, 0xe8, 0x1b, 0x64, 0x02, 0x15, 0xcd, 0x53, 0x00, 0x95,
	0x65, 0xac, 0x3b, 0x08, 0xfb, 0x68, 0x21, 0x01, 0x29, 0x69, 0x17, 0x4c, 0x94, 0x2f, 0x91, 0x02,
	0x0c, 0xfe, 0xee, 0xa1, 0x4b, 0xd3, 0xf4, 0x7b, 0xc0, 0xa4, 0xc2, 0xf7, 0xc6, 0x82, 0xa5, 0xfd,
	0x6a, 0x42, 0xea, 0xdb, 0xb5, 0x50, 0xe9, 0xa1, 0x39, 0xa6, 0x20, 0x29, 0xd2, 0x2d, 0x69, 0xde,
	0x7b, 0xc4, 0x32, 0x08, 0xfe, 0xec, 0xa1, 0xb7, 0xa6, 0x9d, 0xf9, 0x98, 0x26, 0x20, 0xb5, 0xa9,
	0xb2, 0x38, 0x17, 0x34, 0x76, 0x4e, 0x73, 0x90, 0x79, 0xbc, 0x8c, 0x77, 0xf3, 0x98, 0x0a, 0xe7,
	0xb8, 0x12, 0xc6, 0x97, 0x11, 0x92, 0xbd, 0x54, 0x28, 0x43, 0xc1, 0x94, 0xab, 0x25, 0x52, 0xd9,
	0xd1, 0x61, 0x70, 0xc0, 0x78, 0xe4, 0x8c, 0x6f, 0xd6, 0x9a, 0x5e, 0xcc, 0xa4, 0xba, 0xaf, 0xf7,
	0xad, 0xed, 0x4b, 0x58, 0xd3, 0x0b, 0x75, 0x5a, 0x48, 0x05, 0x03, 0xe9, 0xcf, 0x5b, 0x7a, 0xc3,
	0x9d, 0xe0, 0x1f, 0x33, 0xd3, 0x9d, 0xa3, 0x5f, 0x05, 0x3e, 0x8f, 0xe6, 0xba, 0x22, 0xcd, 0x33,
	0xa7, 0x83, 0x05, 0x70, 0x82, 0xe6, 0xb8, 0x93, 0x50, 0xfb, 0xeb, 0x49, 0xf3, 0x66, 0x36, 0xea,
	0x12, 0xcb, 0x45, 0x0b, 0x21, 0xc3, 0x34, 0x03, 0xa7, 0xb6, 0x05, 0x70, 0x8e, 0x16, 0x5d, 0x56,
	0x92, 0xfe, 0x82, 0x71, 0xf7, 0xb3, 0xe6, 0xe5, 0x70, 0x4d, 0x04, 0x29, 0x59, 0x61, 0x81, 0x50,
	0x58, 0xe6, 0x43, 0x7f, 0xc9, 0x18, 0xa0, 0xb1, 0x38, 0xab, 0x64, 0xda, 0x0a, 0x17, 0xfc, 0x2d,
	0x74, 0x21, 0x13, 0x60, 0x68, 0x7d, 0x9f, 0x1f, 0xf0, 0xf4, 0x88, 0x7f, 0x97, 0x41, 0x1c, 0x49,
	0x1f, 0x6d, 0x7a, 0x5b, 0x8b, 0x64, 0x32, 0x32, 0xf8, 0x4b, 0xab, 0x5e, 0xff, 0xea, 0x49, 0x08,
	0xff, 0xd0, 0x28, 0x63, 0x73, 0x8c, 0xf4, 0x3d, 0x63, 0xc5, 0x4f, 0x9a, 0xb7, 0x62, 0x99, 0xc7,
	0x48, 0x85, 0x1d, 0xfe, 0x31, 0x3a, 0x43, 0xc3, 0x10, 0x32, 0x05, 0x91, 0x8d, 0xf7, 0xd6, 0xe9,
	0x46, 0xd3, 0x28, 0x37, 0xfc, 0x2e, 0x3a, 0x2b, 0x55, 0x2a, 0x20, 0x7a, 0x5c, 0x44, 0x91, 0x7d,
	0x6f, 0xb5, 0xdd, 0xe0, 0x0f, 0xb3, 0xe8, 0xed, 0x97, 0x84, 0xc7, 0xc4, 0x3e, 0x42, 0xa7, 0x67,
	0x2d, 0x70, 0x64, 0xf4, 0x5a, 0x24, 0x0e, 0xd2, 0xa9, 0x52, 0x73, 0xd0, 0xa9, 0x72, 0xc6, 0x20,
	0x0a, 0x50, 0xbf, 0xd6, 0x08, 0x32, 0x01, 0xfa, 0x81, 0x46, 0xfe, 0x82, 0x41, 0x56, 0x76, 0x70,
	0x1b, 0xe1, 0x02, 0x62, 0x29, 0x7f, 0x42, 0x05, 0x67, 0xbc, 0xeb, 0x2f, 0x1a, 0x9e, 0x13, 0x30,
	0xf8, 0x05, 0x9a, 0xb7, 0x9d, 0xb6, 0x79, 0x38, 0x0d, 0x86, 0xe9, 0x63, 0x1a, 0xb3, 0xc8, 0xb0,
	0x22, 0x8e, 0x03, 0x3e, 0x46, 0x2b, 0x32, 0xdf, 0x17, 0xee, 0x80, 0x34, 0x99, 0x68, 0xf9, 0xfa,
	0xa3, 0xa6, 0x38, 0xee, 0x55, 0x68, 0x93, 0x11, 0x4e, 0xf8, 0x57, 0x1e, 0xf2, 0x69, 0x64, 0x83,
	0x8a, 0xc6, 0xbb, 0x82, 0x71, 0x05, 0xc2, 0x76, 0x7a, 0x36, 0xe5, 0x35, 0x58, 0xc5, 0xeb, 0x0d,
	0x24, 0x99, 0xca, 0x39, 0xf8, 0xfd, 0x58, 0xf7, 0x59, 0xd1, 0x61, 0x2f, 0xa4, 0x31, 0xe0, 0xab,
	0x68, 0x4d, 0x37, 0x1d, 0x04, 0xb2, 0x98, 0x85, 0x54, 0x9a, 0x3e, 0xd0, 0x46, 0xd0, 0xd8, 0xbe,
	0xf6, 0xbd, 0x2d, 0xef, 0x23, 0xa7, 0x6d, 0xfd, 0x98, 0x80, 0xd1, 0x33, 0x52, 0x4c, 0xf7, 0x21,
	0xde, 0x83, 0x18, 0x42, 0x95, 0x0a, 0x73, 0xdc, 0x36, 0xaf, 0xe3, 0x88, 0xe0, 0x4a, 0x3d, 0xc4,
	0xab, 0xb2, 0xda, 0x3e, 0xe5, 0x3f, 0x1e, 0xda, 0x98, 0xee, 0x13, 0x7c, 0x58, 0x36, 0x23, 0xb6,
	0x86, 0x3f, 0x3b, 0x05, 0xcf, 0x8f, 0x76, 0x4e, 0x98, 0xeb, 0xb2, 0x40, 0xe3, 0x62, 0x8c, 0x78,
	0x7a, 0x1a, 0x1c, 0x35, 0x7d, 0x62, 0xd9, 0x04, 0x9f, 0x8d, 0xb5, 0xe4, 0xc3, 0x77, 0x80, 0x25,
	0x5a, 0x4d, 0x33, 0xe0, 0x7a, 0xee, 0xfc, 0xe6, 0x9e, 0x7d, 0x74, 0xd6, 0x10, 0x77, 0x5f, 0x5f,
	0xac, 0x7b, 0x7b, 0x3b, 0x1f, 0x5b, 0x5a, 0xbb, 0x22, 0xcd, 0x24, 0xa9, 0x73, 0x08, 0xee, 0xa3,
	0x0b, 0x7a, 0x58, 0x14, 0x9c, 0xc6, 0xb7, 0xd3, 0x30, 0x4f, 0x80, 0x2b, 0x2b, 0x4d, 0x6d, 0x2e,
	0xf1, 0xc6, 0xe7, 0x12, 0x3d, 0xb5, 0x8a, 0xd8, 0x05, 0x90, 0x5e, 0x06, 0x3e, 0x9a, 0xd5, 0x0c,
	0x35, 0x46, 0xd0, 0x23, 0x73, 0x67, 0x85, 0xe8, 0x65, 0xf0, 0xdb, 0x37, 0xd0, 0x6a, 0x4d, 0x16,
	0x7c, 0x16, 0xb5, 0xca, 0xa1, 0xb7, 0xc5, 0x22, 0x93, 0xed, 0xac, 0xda, 0x45, 0x33, 0x6a, 0xf3,
	0x82, 0xa6, 0x06, 0x1d, 0x17, 0x79, 0x7a, 0xf9, 0x0a, 0x33, 0x53, 0xd1, 0xec, 0xce, 0x4d, 0x9c,
	0xc0, 0xe6, 0x47, 0x26, 0xb0, 0xf3, 0x68, 0x4e, 0x31, 0x15, 0x83, 0x49, 0x97, 0x4b, 0xc4, 0x02,
	0xf8, 0x29, 0x5a, 0x88, 0xa0, 0x43, 0xf5, 0x9c, 0xbc, 0x68, 0xbc, 0xf0, 0xed, 0x93, 0x79, 0x81,
	0x14, 0xe4, 0x4c, 0xa3, 0x4b, 0x8f, 0x59, 0x92, 0x27, 0xa6, 0xf6, 0x7b, 0xa4, 0x00, 0xf5, 0x6b,
	0x86, 0xe3, 0x30, 0xce, 0x25, 0xeb, 0xc3, 0x43, 0x77, 0xc4, 0xd6, 0xe7, 0xb1, 0x7d, 0x43, 0x85,
	0x71, 0x73, 0x64, 0xd9, 0x51, 0xb1, 0xe0, 0x28, 0x15, 0x77, 0x64, 0xa5, 0x4e, 0xc5, 0x9d, 0xbd,
	0x84, 0x96, 0x12, 0x7a, 0xfc, 0x00, 0x78, 0x57, 0xf5, 0xfc, 0x33, 0x9b, 0xde, 0xd6, 0x0c, 0x19,
	0x6e, 0x18, 0x2c, 0xe3, 0x0e, 0x7b, 0xd6, 0x61, 0x8b, 0x0d, 0x2d, 0x41, 0x46, 0x95, 0x8e, 0x1d,
	0x7f, 0xd5, 0x36, 0xec, 0x0e, 0xd4, 0xfd, 0x64, 0x42, 0x8f, 0xef, 0x9a, 0x36, 0x7a, 0xcd, 0x5c,
	0x2b, 0x61, 0x83, 0x63, 0xdc, 0xe2, 0xd6, 0x1d, 0xce, 0xc1, 0xda, 0xaf, 0x39, 0x67, 0x87, 0x39,
	0x58, 0x34, 0x36, 0x42, 0x57, 0xb7, 0x74, 0x7d, 0x4b, 0xf2, 0x58, 0xb1, 0x2c, 0x86, 0x9d, 0x8e,
	0x7f, 0xce, 0x28, 0x5e, 0xd9, 0xc1, 0x04, 0xcd, 0x02, 0xcf, 0x13, 0xff, 0xbc, 0x49, 0xda, 0x27,
	0x75, 0x99, 0xa1, 0x85, 0xdf, 0x41, 0x67, 0x12, 0x7a, 0xac, 0x63, 0x16, 0x84, 0xd2, 0x4d, 0xf0,
	0x05, 0x23, 0xf6, 0xe8, 0xa6, 0x39, 0xc5, 0x78, 0xe5, 0xd4, 0x45, 0x77, 0xaa, 0xba, 0xa9, 0xb5,
	0x17, 0x70, 0x98, 0x33, 0x01, 0x91, 0xff, 0x7f, 0xa6, 0x57, 0x28, 0x61, 0xdc, 0x29, 0x26, 0x0f,
	0xdf, 0xc4, 0xdb, 0x6e, 0x63, 0xaf, 0x7e, 0x47, 0x7c, 0x24, 0x04, 0x1d, 0xb8, 0xb9, 0x03, 0x7f,
	0x8a, 0xe6, 0x68, 0x1c, 0xef, 0x74, 0xfc, 0x37, 0x8c, 0x91, 0x1a, 0xcc, 0x2e, 0x96, 0xae, 0x66,
	0x90, 0x72, 0xed, 0x9f, 0x8d, 0xc6, 0x19, 0x18, 0xba, 0x46, 0x03, 0x3e, 0xd8, 0xe9, 0xf8, 0x6f,
	0x36, 0xaf, 0x81, 0xa6, 0x8b, 0x3f, 0x41, 0x33, 0x3c, 0x55, 0xfe, 0xa5, 0xa6, 0xd3, 0xaf, 0xa6,
	0x8a, 0x07, 0x08, 0x65, 0xc3, 0x30, 0x79, 0xeb, 0xa4, 0x73, 0x47, 0x8d, 0x47, 0x7b, 0x18, 0x6d,
	0x77, 0xb8, 0x12, 0x03, 0x52, 0x61, 0x86, 0x7f, 0xea, 0xa1, 0xf3, 0xd5, 0x76, 0xa3, 0x94, 0xe2,
	0xb2, 0xd1, 0x74, 0xa7, 0xc1, 0x90, 0xbb, 0x99, 0xa6, 0x31, 0x99, 0xc8, 0x0c, 0xff, 0xc2, 0x43,
	0xeb, 0x2e, 0x55, 0x54, 0x44, 0x78, 0xdb, 0x18, 0xe2, 0x07, 0x0d, 0x1a, 0xa2, 0xce, 0xc2, 0xda,
	0x63, 0x9c, 0x35, 0xfe, 0x09, 0x5a, 0x89, 0x20, 0x03, 0x1e, 0x01, 0x0f, 0xb5, 0x28, 0x9b, 0x27,
	0x9d, 0x62, 0xea, 0xa2, 0xdc, 0xae, 0x50, 0xb7, 0x52, 0x8c, 0x30, 0xc4, 0x03, 0xb4, 0x3a, 0xb4,
	0x94, 0x4d, 0x7e, 0x57, 0x4e, 0xc7, 0x23, 0x75, 0x3e, 0xf8, 0x47, 0xba, 0x96, 0x16, 0xcd, 0xa8,
	0xf4, 0x03, 0xa3, 0xfa, 0xf3, 0x26, 0x55, 0x2f, 0x89, 0x5b, 0xcd, 0xab, 0xec, 0xb0, 0x44, 0x2b,
	0x30, 0x6c, 0x3f, 0xa4, 0xff, 0xff, 0x27, 0xd5, 0x7a, 0x62, 0x33, 0x43, 0x46, 0x98, 0xe8, 0xd2,
	0x0e, 0xc7, 0x34, 0xc9, 0x62, 0xf0, 0xdf, 0x69, 0xa6, 0xb4, 0x3b, 0x72, 0x3a, 0xbd, 0xf3, 0x3c,
	0x8e, 0xe9, 0x7e, 0x0c, 0xfe, 0x57, 0x4c, 0xf5, 0x2a, 0x61, 0x7c, 0x0f, 0x6d, 0x1e, 0xdf, 0xcf,
	0xf7, 0x41, 0x70, 0x50, 0x20, 0x77, 0x27, 0x0e, 0xe3, 0xef, 0x9a, 0x3b, 0x2f, 0x3d, 0x87, 0xbf,
	0x83, 0xde, 0xac, 0x9c, 0xb9, 0x93, 0xec, 0x43, 0x14, 0x41, 0x54, 0xf4, 0x94, 0xfe, 0x57, 0x0d,
	0x99, 0x2f, 0x3a, 0x82, 0x3f, 0x40, 0x17, 0x2b, 0xe8, 0xbb, 0x5c, 0xed, 0x88, 0x3d, 0x25, 0xf4,
	0x30, 0xb8, 0x65, 0x2e, 0x4f, 0xc1, 0xd6, 0xee, 0x99, 0xef, 0x67, 0x34, 0xbb, 0x0f, 0x03, 0xe9,
	0x7f, 0xcd, 0x94, 0xb3, 0x29, 0x58, 0xfc, 0x3e, 0x3a, 0x57, 0xc3, 0x3c, 0xd2, 0xfd, 0xd9, 0x55,
	0xd3, 0x38, 0x4c, 0x42, 0xe9, 0x71, 0xa5, 0xb2, 0xfd, 0x90, 0x66, 0xe6, 0xc2, 0xd7, 0xed, 0xb8,
	0x32, 0x8e, 0xd9, 0xf8, 0x99, 0x87, 0x56, 0x6b, 0x6f, 0x5d, 0xb7, 0x8e, 0x07, 0x50, 0x7c, 0xe0,
	0xd6, 0x4b, 0x5d, 0x3a, 0xfa, 0x34, 0xce, 0x8b, 0x8e, 0xbf, 0xc9, 0xd2, 0x61, 0xe8, 0x7e, 0xd8,
	0xba, 0xe1, 0x6d, 0x7c, 0xe6, 0xa1, 0x8b, 0x93, 0xb3, 0xcf, 0x97, 0x25, 0xd1, 0xaf, 0x3d, 0xb4,
	0x3e, 0x96, 0x84, 0x26, 0x08, 0x13, 0x8f, 0x0a, 0xf3, 0xb8, 0xc1, 0xf4, 0x63, 0x03, 0xc8, 0x75,
	0x22, 0x43, 0xc9, 0x7e, 0xee, 0xa1, 0xb5, 0x7a, 0x8e, 0xf8, 0x92, 0xac, 0x14, 0xfc, 0xdb, 0x43,
	0x17, 0x27, 0xf7, 0x4e, 0x98, 0x96, 0xc3, 0x49, 0xe3, 0x33, 0x59, 0x31, 0xe7, 0x1c, 0xa0, 0xe5,
	0x17, 0x25, 0xaa, 0xf8, 0xfe, 0xdc, 0x20, 0x9f, 0x2a, 0xf5, 0xe0, 0x97, 0x1e, 0xba, 0x30, 0xb1,
	0x42, 0xe8, 0x31, 0x89, 0xc6, 0x71, 0x7a, 0x64, 0xc7, 0xf0, 0x45, 0xe2, 0xa0, 0x8a, 0x05, 0x5a,
	0xa7, 0x64, 0x81, 0xe0, 0x73, 0x0f, 0x5d, 0xfa, 0xa2, 0xb8, 0xf9, 0x5f, 0x78, 0xc1, 0xfc, 0x6d,
	0x33, 0x6f, 0x76, 0x60, 0x5c, 0xb0, 0x44, 0x4a, 0x38, 0x88, 0xd1, 0xda, 0x1e, 0x88, 0x3e, 0x0b,
	0x81, 0x40, 0x07, 0x04, 0xf0, 0x10, 0xf4, 0x8c, 0x64, 0x3e, 0x31, 0x67, 0x34, 0x2c, 0x3e, 0xde,
	0x0d, 0x37, 0xca, 0xaf, 0x7a, 0xad, 0xd1, 0xbf, 0x83, 0xd9, 0xf0, 0x53, 0x8a, 0x59, 0x9b, 0xbd,
	0x54, 0x28, 0x33, 0xca, 0xce, 0x11, 0xb3, 0x0e, 0x7e, 0xe7, 0xa1, 0x73, 0xc5, 0xef, 0xb3, 0x98,
	0x01, 0x57, 0xb7, 0x52, 0xde, 0x61, 0xdd, 0x62, 0xee, 0x9e, 0x29, 0xe7, 0x6e, 0x1c, 0xa1, 0x05,
	0x69, 0xe5, 0x72, 0x76, 0xb9, 0xf7, 0xfa, 0x76, 0xa9, 0x2b, 0x48, 0x0a, 0xd2, 0xda, 0x32, 0x21,
	0xbd, 0x99, 0xf3, 0xc8, 0x7d, 0x2f, 0x59, 0x21, 0x25, 0x1c, 0xfc, 0xc9, 0x43, 0xeb, 0x63, 0xbf,
	0xfa, 0xf0, 0x21, 0x5a, 0x09, 0x2b, 0x92, 0xbb, 0xc0, 0x79, 0x78, 0xf2, 0xbf, 0x89, 0x15, 0xa2,
	0x64, 0x84, 0x05, 0xfe, 0x10, 0xf9, 0x61, 0xed, 0xb7, 0x74, 0xed, 0xe3, 0xec, 0x54, 0xfc, 0xcd,
	0xd9, 0xe7, 0xad, 0xfe, 0xb5, 0xff, 0x06, 0x00, 0x00, 0xff, 0xff, 0x05, 0x54, 0x61, 0x12, 0x33,
	0x21, 0x00, 0x00,
}
